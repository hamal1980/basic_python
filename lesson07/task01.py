'''
1. Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод init()),
который должен принимать данные (список списков) для формирования матрицы.
Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
Примеры матриц: см. в методичке.

Следующий шаг — реализовать перегрузку метода str() для вывода матрицы в привычном виде.
Далее реализовать перегрузку метода add() для реализации операции сложения двух объектов класса Matrix (двух матриц).
Результатом сложения должна быть новая матрица.
Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент первой строки первой матрицы складываем с
первым элементом первой строки второй матрицы и т.д.
'''

class Matrix():
    def __init__(self, list_of_lists):
        self.matr = list_of_lists

    def str(self):
        elem = ''
        for vert in self.matr:
            for gor in vert:
                elem = elem + '%s\t' % (gor)
            elem = elem[:-1]
            elem += '\n'
        elem = elem[:-1]
        return elem

    # Сложение матриц только одинаковой размерности
    def __add__(self, other):
        lists = []
        list1 = self.matr
        list2 = other.matr
        for i in range(0, len(list1)):
            lists.append(map(sum, zip(list1[i], list2[i])))
        return Matrix(lists)

a = [[10, 2, 3], [4, 5, 6], [7, 8, 9], [1, 2, 0]]
b = [[9, 8, 7], [6, 5, 4], [3, 2, 1], [2, 1, 0]]
c = []
m1 = Matrix(a)
m2 = Matrix(b)
mc = Matrix(c)
mc = m1 + m2

print("Matrix1")
print(m1.str())
print("Matrix2")
print(m2.str())
print("MatrixSum")
print(mc.str())